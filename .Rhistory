full.names = TRUE,
recursive = TRUE)
# prod data files
prod_data_files <- stringr::str_replace_all(dev_data_files, "/dev/", "/prod/")
# return(prod_data_files)
if (length(dev_data_files) < 1) {
cli::cli_alert(glue::glue("no data filees in inst/dev/{name} to copy!"))
} else {
fs::dir_create(prod_data_dir)
purrr::walk2(.x = prod_data_files, .y = dev_data_files,
.f = fs::dir_copy, overwrite = TRUE)
cli::cli_alert(glue::glue("data files copied to inst/prod/{name}!"))
}
copy_dev_data_dir("test")
#' @export copy_dev_data_dir
#'
#' @importFrom purrr walk2
#' @importFrom fs file_copy dir_create
#' @importFrom cli cli_alert
#' @importFrom glue glue
#' @importFrom rprojroot find_root_file from_wd
#'
#' @examples
#' copy_dev_data_dir("test")
copy_dev_data_dir <- function(name) {
dev_dir <- check_dev_dir(name)
# create production folder
root_dir <- rprojroot::find_root_file(criterion = rprojroot::from_wd)
prod_dir <- file.path(root_dir, "inst/prod", basename(dev_dir))
# create production data folder
prod_data_dir <- file.path(prod_dir, "data")
# create development data folder
dev_data_dir <- file.path(dev_dir, "data")
# dev data files
dev_data_files <- list.files(path = dev_data_dir,
full.names = TRUE,
recursive = TRUE)
# prod data files
prod_data_files <- stringr::str_replace_all(dev_data_files, "/dev/", "/prod/")
return(dev_data_files)
# if (length(dev_data_files) < 1) {
#   cli::cli_alert(glue::glue("no data filees in inst/dev/{name} to copy!"))
# } else {
#   fs::dir_create(prod_data_dir)
#   purrr::walk2(.x = prod_data_files, .y = dev_data_files,
#                .f = fs::dir_copy, overwrite = TRUE)
#   cli::cli_alert(glue::glue("data files copied to inst/prod/{name}!"))
# }
}
copy_dev_data_dir("test")
x_bla <- copy_dev_data_dir("test")
#' @export copy_dev_data_dir
#'
#' @importFrom purrr walk2
#' @importFrom fs file_copy dir_create
#' @importFrom cli cli_alert
#' @importFrom glue glue
#' @importFrom rprojroot find_root_file from_wd
#'
#' @examples
#' copy_dev_data_dir("test")
copy_dev_data_dir <- function(name) {
dev_dir <- check_dev_dir(name)
# create production folder
root_dir <- rprojroot::find_root_file(criterion = rprojroot::from_wd)
prod_dir <- file.path(root_dir, "inst/prod", basename(dev_dir))
# create production data folder
prod_data_dir <- file.path(prod_dir, "data")
# create development data folder
dev_data_dir <- file.path(dev_dir, "data")
# dev data files
dev_data_files <- list.files(path = dev_data_dir,
full.names = TRUE,
recursive = TRUE)
# prod data files
prod_data_files <- stringr::str_replace_all(dev_data_files, "/dev/", "/prod/")
return(prod_data_files)
# if (length(dev_data_files) < 1) {
#   cli::cli_alert(glue::glue("no data filees in inst/dev/{name} to copy!"))
# } else {
#   fs::dir_create(prod_data_dir)
#   purrr::walk2(.x = prod_data_files, .y = dev_data_files,
#                .f = fs::dir_copy, overwrite = TRUE)
#   cli::cli_alert(glue::glue("data files copied to inst/prod/{name}!"))
# }
}
y_bla <- copy_dev_data_dir("test")
x_bla
y_bla
purrr::walk2(.x = x_bla, .y = y_bla, .f = fs::file_copy)
#' @export copy_dev_data_dir
#'
#' @importFrom purrr walk2
#' @importFrom fs file_copy dir_create
#' @importFrom cli cli_alert
#' @importFrom glue glue
#' @importFrom rprojroot find_root_file from_wd
#'
#' @examples
#' copy_dev_data_dir("test")
copy_dev_data_dir <- function(name) {
dev_dir <- check_dev_dir(name)
# create production folder
root_dir <- rprojroot::find_root_file(criterion = rprojroot::from_wd)
prod_dir <- file.path(root_dir, "inst/prod", basename(dev_dir))
# create production data folder
prod_data_dir <- file.path(prod_dir, "data")
# create development data folder
dev_data_dir <- file.path(dev_dir, "data")
# dev data files
dev_data_files <- list.files(path = dev_data_dir,
full.names = TRUE,
recursive = TRUE)
# prod data files
prod_data_files <- stringr::str_replace_all(dev_data_files, "/dev/", "/prod/")
if (length(dev_data_files) < 1) {
cli::cli_alert(glue::glue("no data filees in inst/dev/{name} to copy!"))
} else {
prod_data_dirs <- purrr::map(.x = prod_data_files, .f = dirname)
return(prod_data_files)
# fs::dir_create(prod_data_dir)
# purrr::walk2(.x = prod_data_files, .y = dev_data_files,
#              .f = fs::dir_copy, overwrite = TRUE)
# cli::cli_alert(glue::glue("data files copied to inst/prod/{name}!"))
}
copy_dev_data_dir("test")
#' @export copy_dev_data_dir
#'
#' @importFrom purrr walk2
#' @importFrom fs file_copy dir_create
#' @importFrom cli cli_alert
#' @importFrom glue glue
#' @importFrom rprojroot find_root_file from_wd
#'
#' @examples
#' copy_dev_data_dir("test")
copy_dev_data_dir <- function(name) {
dev_dir <- check_dev_dir(name)
# create production folder
root_dir <- rprojroot::find_root_file(criterion = rprojroot::from_wd)
prod_dir <- file.path(root_dir, "inst/prod", basename(dev_dir))
# create production data folder
prod_data_dir <- file.path(prod_dir, "data")
# create development data folder
dev_data_dir <- file.path(dev_dir, "data")
# dev data files
dev_data_files <- list.files(path = dev_data_dir,
full.names = TRUE,
recursive = TRUE)
# prod data files
prod_data_files <- stringr::str_replace_all(dev_data_files, "/dev/", "/prod/")
if (length(dev_data_files) < 1) {
cli::cli_alert(glue::glue("no data filees in inst/dev/{name} to copy!"))
} else {
prod_data_dirs <- purrr::map(.x = prod_data_files, .f = dirname)
return(prod_data_dirs)
# fs::dir_create(prod_data_dir)
# purrr::walk2(.x = prod_data_files, .y = dev_data_files,
#              .f = fs::dir_copy, overwrite = TRUE)
# cli::cli_alert(glue::glue("data files copied to inst/prod/{name}!"))
}
copy_dev_data_dir("test")
#' @export copy_dev_data_dir
#'
#' @importFrom purrr walk2
#' @importFrom fs file_copy dir_create
#' @importFrom cli cli_alert
#' @importFrom glue glue
#' @importFrom rprojroot find_root_file from_wd
#'
#' @examples
#' copy_dev_data_dir("test")
copy_dev_data_dir <- function(name) {
dev_dir <- check_dev_dir(name)
# create production folder
root_dir <- rprojroot::find_root_file(criterion = rprojroot::from_wd)
prod_dir <- file.path(root_dir, "inst/prod", basename(dev_dir))
# create production data folder
prod_data_dir <- file.path(prod_dir, "data")
# create development data folder
dev_data_dir <- file.path(dev_dir, "data")
# dev data files
dev_data_files <- list.files(path = dev_data_dir,
full.names = TRUE,
recursive = TRUE)
# prod data files
prod_data_files <- stringr::str_replace_all(dev_data_files, "/dev/", "/prod/")
if (length(dev_data_files) < 1) {
cli::cli_alert(glue::glue("no data filees in inst/dev/{name} to copy!"))
} else {
prod_data_dirs <- purrr::map_chr(.x = prod_data_files, .f = dirname)
return(prod_data_dirs)
# fs::dir_create(prod_data_dir)
# purrr::walk2(.x = prod_data_files, .y = dev_data_files,
#              .f = fs::dir_copy, overwrite = TRUE)
# cli::cli_alert(glue::glue("data files copied to inst/prod/{name}!"))
}
copy_dev_data_dir("test")
#' @export copy_dev_data_dir
#'
#' @importFrom purrr walk2
#' @importFrom fs file_copy dir_create
#' @importFrom cli cli_alert
#' @importFrom glue glue
#' @importFrom rprojroot find_root_file from_wd
#'
#' @examples
#' copy_dev_data_dir("test")
copy_dev_data_dir <- function(name) {
dev_dir <- check_dev_dir(name)
# create production folder
root_dir <- rprojroot::find_root_file(criterion = rprojroot::from_wd)
prod_dir <- file.path(root_dir, "inst/prod", basename(dev_dir))
# create production data folder
prod_data_dir <- file.path(prod_dir, "data")
# create development data folder
dev_data_dir <- file.path(dev_dir, "data")
# dev data files
dev_data_files <- list.files(path = dev_data_dir,
full.names = TRUE,
recursive = TRUE)
# prod data files
prod_data_files <- stringr::str_replace_all(dev_data_files, "/dev/", "/prod/")
if (length(dev_data_files) < 1) {
cli::cli_alert(glue::glue("no data filees in inst/dev/{name} to copy!"))
} else {
prod_data_dirs <- purrr::map_chr(.x = prod_data_files, .f = dirname)
purrr::walk(.x = prod_data_dirs, .f = fs::dir_create)
# return(prod_data_dirs)
# fs::dir_create(prod_data_dir)
# purrr::walk2(.x = prod_data_files, .y = dev_data_files,
#              .f = fs::dir_copy, overwrite = TRUE)
# cli::cli_alert(glue::glue("data files copied to inst/prod/{name}!"))
}
copy_dev_data_dir("test")
#' @export copy_dev_data_dir
#'
#' @importFrom purrr walk2
#' @importFrom fs file_copy dir_create
#' @importFrom cli cli_alert
#' @importFrom glue glue
#' @importFrom rprojroot find_root_file from_wd
#'
#' @examples
#' copy_dev_data_dir("test")
copy_dev_data_dir <- function(name) {
dev_dir <- check_dev_dir(name)
# create production folder
root_dir <- rprojroot::find_root_file(criterion = rprojroot::from_wd)
prod_dir <- file.path(root_dir, "inst/prod", basename(dev_dir))
# create production data folder path
prod_data_dir <- file.path(prod_dir, "data")
# create development data folder path
dev_data_dir <- file.path(dev_dir, "data")
# dev data files
dev_data_files <- list.files(path = dev_data_dir,
full.names = TRUE,
recursive = TRUE)
# prod data files
prod_data_files <- stringr::str_replace_all(dev_data_files, "/dev/", "/prod/")
if (length(dev_data_files) < 1) {
cli::cli_alert(glue::glue("no data filees in inst/dev/{name} to copy!"))
} else {
prod_data_dirs <- purrr::map_chr(.x = prod_data_files, .f = dirname)
purrr::walk(.x = prod_data_dirs, .f = fs::dir_create)
# return(prod_data_dirs)
# fs::dir_create(prod_data_dir)
# purrr::walk2(.x = prod_data_files, .y = dev_data_files,
#              .f = fs::dir_copy, overwrite = TRUE)
# cli::cli_alert(glue::glue("data files copied to inst/prod/{name}!"))
}
copy_dev_data_dir("test")
#' @export copy_dev_data_dir
#'
#' @importFrom purrr walk2
#' @importFrom fs file_copy dir_create
#' @importFrom cli cli_alert
#' @importFrom glue glue
#' @importFrom rprojroot find_root_file from_wd
#'
#' @examples
#' copy_dev_data_dir("test")
copy_dev_data_dir <- function(name) {
dev_dir <- check_dev_dir(name)
# create production folder
root_dir <- rprojroot::find_root_file(criterion = rprojroot::from_wd)
prod_dir <- file.path(root_dir, "inst/prod", basename(dev_dir))
# create production data folder path
prod_data_dir <- file.path(prod_dir, "data")
# create development data folder path
dev_data_dir <- file.path(dev_dir, "data")
# dev data files
dev_data_files <- list.files(path = dev_data_dir,
full.names = TRUE,
recursive = TRUE)
# prod data files
prod_data_files <- stringr::str_replace_all(dev_data_files, "/dev/", "/prod/")
if (length(dev_data_files) < 1) {
cli::cli_alert(glue::glue("no data filees in inst/dev/{name} to copy!"))
} else {
prod_data_dirs <- purrr::map_chr(.x = prod_data_files, .f = dirname)
purrr::walk(.x = prod_data_dirs, .f = fs::dir_create)
purrr::walk2(.x = prod_data_files, .y = dev_data_files,
.f = fs::dir_copy, overwrite = TRUE)
# cli::cli_alert(glue::glue("data files copied to inst/prod/{name}!"))
}
copy_dev_data_dir("test")
#' @export copy_dev_data_dir
#'
#' @importFrom purrr walk2
#' @importFrom fs file_copy dir_create
#' @importFrom cli cli_alert
#' @importFrom glue glue
#' @importFrom rprojroot find_root_file from_wd
#'
#' @examples
#' copy_dev_data_dir("test")
copy_dev_data_dir <- function(name) {
dev_dir <- check_dev_dir(name)
# create production folder
root_dir <- rprojroot::find_root_file(criterion = rprojroot::from_wd)
prod_dir <- file.path(root_dir, "inst/prod", basename(dev_dir))
# create production data folder path
prod_data_dir <- file.path(prod_dir, "data")
# create development data folder path
dev_data_dir <- file.path(dev_dir, "data")
# dev data files
dev_data_files <- list.files(path = dev_data_dir,
full.names = TRUE,
recursive = TRUE)
# prod data files
prod_data_files <- stringr::str_replace_all(dev_data_files, "/dev/", "/prod/")
if (length(dev_data_files) < 1) {
cli::cli_alert(glue::glue("no data filees in inst/dev/{name} to copy!"))
} else {
prod_data_dirs <- purrr::map_chr(.x = prod_data_files, .f = dirname)
purrr::walk(.x = prod_data_dirs, .f = fs::dir_create)
return(prod_data_files)
# purrr::walk2(.x = prod_data_files, .y = dev_data_files,
#              .f = fs::dir_copy, overwrite = TRUE)
# cli::cli_alert(glue::glue("data files copied to inst/prod/{name}!"))
}
copy_dev_data_dir("test")
#' @export copy_dev_data_dir
#'
#' @importFrom purrr walk2
#' @importFrom fs file_copy dir_create
#' @importFrom cli cli_alert
#' @importFrom glue glue
#' @importFrom rprojroot find_root_file from_wd
#'
#' @examples
#' copy_dev_data_dir("test")
copy_dev_data_dir <- function(name) {
dev_dir <- check_dev_dir(name)
# create production folder
root_dir <- rprojroot::find_root_file(criterion = rprojroot::from_wd)
prod_dir <- file.path(root_dir, "inst/prod", basename(dev_dir))
# create production data folder path
prod_data_dir <- file.path(prod_dir, "data")
# create development data folder path
dev_data_dir <- file.path(dev_dir, "data")
# dev data files
dev_data_files <- list.files(path = dev_data_dir,
full.names = TRUE,
recursive = TRUE)
# prod data files
prod_data_files <- stringr::str_replace_all(dev_data_files, "/dev/", "/prod/")
if (length(dev_data_files) < 1) {
cli::cli_alert(glue::glue("no data filees in inst/dev/{name} to copy!"))
} else {
prod_data_dirs <- purrr::map_chr(.x = prod_data_files, .f = dirname)
purrr::walk(.x = prod_data_dirs, .f = fs::dir_create)
}
purrr::walk2(.x = prod_data_files, .y = dev_data_files,
.f = fs::dir_copy, overwrite = TRUE)
cli::cli_alert(glue::glue("data files copied to inst/prod/{name}!"))
}
copy_dev_data_dir("test")
#' @export copy_dev_data_dir
#'
#' @importFrom purrr walk2
#' @importFrom fs file_copy dir_create
#' @importFrom cli cli_alert
#' @importFrom glue glue
#' @importFrom rprojroot find_root_file from_wd
#'
#' @examples
#' copy_dev_data_dir("test")
copy_dev_data_dir <- function(name) {
dev_dir <- check_dev_dir(name)
# create production folder
root_dir <- rprojroot::find_root_file(criterion = rprojroot::from_wd)
prod_dir <- file.path(root_dir, "inst/prod", basename(dev_dir))
# create production data folder path
prod_data_dir <- file.path(prod_dir, "data")
# create development data folder path
dev_data_dir <- file.path(dev_dir, "data")
# dev data files
dev_data_files <- list.files(path = dev_data_dir,
full.names = TRUE,
recursive = TRUE)
# prod data files
prod_data_files <- stringr::str_replace_all(dev_data_files, "/dev/", "/prod/")
if (length(dev_data_files) < 1) {
cli::cli_alert(glue::glue("no data filees in inst/dev/{name} to copy!"))
} else {
prod_data_dirs <- purrr::map_chr(.x = prod_data_files, .f = dirname)
purrr::walk(.x = prod_data_dirs, .f = fs::dir_create)
# copy files
purrr::walk2(.x = dev_data_files, .y = prod_data_files,
.f = fs::file_copy, overwrite = TRUE)
cli::cli_alert(glue::glue("data files copied to inst/prod/{name}!"))
}
copy_dev_data_dir("test")
#' @export copy_dev_worksheets
#'
#' @importFrom purrr walk2
#' @importFrom fs file_copy dir_create
#' @importFrom cli cli_alert
#' @importFrom glue glue
#' @importFrom rprojroot find_root_file from_wd
#'
#' @examples
#' copy_dev_worksheets("test")
copy_dev_worksheets <- function(name) {
dev_dir <- check_dev_dir(name)
# create production folder
root_dir <- rprojroot::find_root_file(criterion = rprojroot::from_wd)
prod_dir <- file.path(root_dir, "inst/prod", basename(dev_dir))
# create production worksheet folder path
prod_worksheet_dir <- file.path(prod_dir, "worksheets")
# create development worksheets folder path
dev_worksheets_dir <- file.path(dev_dir, "worksheets")
# dev worksheets files
dev_worksheets_files <- list.files(path = dev_worksheets_dir,
full.names = TRUE,
recursive = TRUE)
# prod worksheets files
prod_worksheets_files <- stringr::str_replace_all(dev_worksheets_files,
"/dev/", "/prod/")
if (length(dev_worksheets_files) < 1) {
cli::cli_alert(glue::glue("no worksheet filees in inst/dev/{name} to copy!"))
} else {
prod_worksheet_dirs <- purrr::map_chr(.x = prod_worksheets_files, .f = dirname)
purrr::walk(.x = prod_worksheet_dirs, .f = fs::dir_create)
# copy files
purrr::walk2(.x = dev_worksheets_files, .y = prod_worksheets_files,
.f = fs::file_copy, overwrite = TRUE)
cli::cli_alert_success(
glue::glue("worksheet files copied to inst/prod/{name}!"))
}
copy_dev_worksheets("test")
copy_dev_data("test")
#'
#' @importFrom purrr walk2 map_chr walk
#' @importFrom fs file_copy dir_create
#' @importFrom cli cli_alert_success cli_alert
#' @importFrom glue glue
#' @importFrom stringr str_replace_all
#' @importFrom rprojroot find_root_file from_wd
#'
#' @examples
#' copy_dev_data("test")
copy_dev_data <- function(name) {
dev_dir <- check_dev_dir(name)
# create production folder
root_dir <- rprojroot::find_root_file(criterion = rprojroot::from_wd)
prod_dir <- file.path(root_dir, "inst/prod", basename(dev_dir))
# create production data folder path
prod_data_dir <- file.path(prod_dir, "data")
# create development data folder path
dev_data_dir <- file.path(dev_dir, "data")
# dev data files
dev_data_files <- list.files(path = dev_data_dir,
full.names = TRUE,
recursive = TRUE)
# prod data files
prod_data_files <- stringr::str_replace_all(dev_data_files, "/dev/", "/prod/")
if (length(dev_data_files) < 1) {
cli::cli_alert(glue::glue("no data filees in inst/dev/{name} to copy!"))
} else {
prod_data_dirs <- purrr::map_chr(.x = prod_data_files, .f = dirname)
purrr::walk(.x = prod_data_dirs, .f = fs::dir_create)
# copy files
purrr::walk2(.x = dev_data_files, .y = prod_data_files,
.f = fs::file_copy, overwrite = TRUE)
cli::cli_alert_success(glue::glue("data files copied to inst/prod/{name}!"))
}
copy_dev_data("test")
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
library(pdgdev)
build_prod("test")
build_prod("objects")
build_prod("iteration")
devtools::load_all()
devtools::document()
library(pdgdev)
build_prod("iteration")
create_pdf_slides("iteration")
build_prod("iteration")
devtools::load_all()
devtools::document()
library(pdgdev)
build_prod("iteration")
build_prod("import")
devtools::load_all()
devtools::document()
library(pdgdev)
